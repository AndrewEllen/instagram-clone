name: Flutter CI/CD

on:
  pull_request:
    branches:
      - dev

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.1'

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter analyze

  get_review_status:
    name: Get Pull Request Review Status
    needs: build
    runs-on: ubuntu-latest
    outputs:
      review_status: ${{ steps.set_review_status.outputs.review_status }}

    steps:
      - name: Get Pull Request Information
        id: pr_info
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}

      - name: Set Review Status
        id: set_review_status
        run: |
          review_state=$(echo "${{ steps.pr_info.outputs.data }}" | jq -r '.state')
          if [[ "$review_state" == "open" ]]; then
            echo "::set-output name=review_status::PENDING"
          else
            echo "::set-output name=review_status::APPROVED"
          fi

  merge:
    name: Merge Pull Request
    needs: [build, get_review_status]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/pull/*/merge' && needs.get_review_status.outputs.review_status == 'APPROVED'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Merge Pull Request
        uses: pascalgn/automerge-action@v0.9.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
